.modal {
  /* =============== Variables =============== */
  $overlay-background-color: $modal-background-color-primary;

  // --Default-light
  $container-background-color--default-light: $modal-background-color-secondary;
  $close-icon-background-color--default-light: $modal-background-color-secondary;
  $close-icon-hover-background-color--default-light: $modal-background-color-tertiary;
  // --Default-dark
  $container-background-color--default-dark: $modal-background-color-tertiary;
  $close-icon-background-color--default-dark: $modal-background-color-tertiary;
  $close-icon-hover-background-color--default-dark: $modal-background-color-secondary;

  $container-width: 400px;
  $container-border-radius: 10px;
  $container-padding: 30px;
  $close-button-position-T: 16px;
  $close-button-position-R: -30px;
  $close-icon-size: 16px;
  $line-height: 2px;
  $line-width: 100%;
  $line-border-radius: $line-border-radius-primary;

  $overlay-padding: -2 * $close-button-position-R - $close-icon-size;

  $root: &;

  &__overlay {
    background-color: $overlay-background-color;

    // Overlay-padding
    @include space(padding, $gen: $overlay-padding);

    /* =============== Modifiers =============== */
    &--default-light {
      #{$root}__container {
        background-color: $container-background-color--default-light;
      }

      #{$root}__close-icon {
        &:after,
        &:before {
          background-color: $close-icon-background-color--default-light;
        }
      }

      #{$root}__close-button {
        @media (hover: hover) and (pointer: fine) {
          &:hover {
            #{$root}__close-icon {
              &:after,
              &:before {
                background-color: $close-icon-hover-background-color--default-light;
              }
            }
          }
        }
      }
    }

    &--default-dark {
      #{$root}__container {
        background-color: $container-background-color--default-dark;
      }

      #{$root}__close-icon {
        &:after,
        &:before {
          background-color: $close-icon-background-color--default-dark;
        }
      }

      #{$root}__close-button {
        @media (hover: hover) and (pointer: fine) {
          &:hover {
            #{$root}__close-icon {
              &:after,
              &:before {
                background-color: $close-icon-hover-background-color--default-dark;
              }
            }
          }
        }
      }
    }
    /* =============== End =============== */
  }

  &__container {
    // Container-border-radius
    border-radius: $container-border-radius;

    // Container-width
    @include size($width: $container-width);
    // Container-padding
    @include space(padding, $gen: $container-padding);
    @include box-shadow(none);

    @media (max-width: map-get($breakpoints, breakpoint-small)) {
      @include size($width: 100%);
    }
  }

  &__close-button {
    // Close-button-position-T
    top: $close-button-position-T;
    // Close-button-position-R
    right: $close-button-position-R;
  }

  &__close-icon {
    cursor: pointer;

    // Close-icon-size
    @include size($width: $close-icon-size, $height: $close-icon-size);
    @include position(relative);

    &:before,
    &:after {
      content: "";
      // Line-border-radius
      border-radius: $line-border-radius;

      // Line-width & Line-height
      @include size($width: $line-width, $height: $line-height);
      @include space(margin, $top: -1px);
      @include position(absolute, $top: 50%, $left: 0);
      @include transition(
        null,
        (
          "property": background-color,
        )
      );
    }

    &:before {
      @include transform(rotate(45deg));
    }

    &:after {
      @include transform(rotate(-45deg));
    }
  }
}

/* ***===================== Animations =====================*** */
// Fade
@-webkit-keyframes modal-fade-enter {
  from {
    opacity: 0;
  }
}

@keyframes modal-fade-enter {
  from {
    opacity: 0;
  }
}

.modal-fade-enter {
  @include prefix(
    (
      animation: modal-fade-enter both ease-in,
    ),
    webkit
  );
}

@-webkit-keyframes modal-fade-leave {
  to {
    opacity: 0;
  }
}

@keyframes modal-fade-leave {
  to {
    opacity: 0;
  }
}

.modal-fade-leave {
  @include prefix(
    (
      animation: modal-fade-leave both ease-out,
    ),
    webkit
  );
}

// Zoom
@-webkit-keyframes modal-zoom-enter {
  from {
    @include transform(scale3d(0.3, 0.3, 0.3));
  }
}

@keyframes modal-zoom-enter {
  from {
    @include transform(scale3d(0.3, 0.3, 0.3));
  }
}

.modal-zoom-enter {
  @include prefix(
    (
      animation: modal-zoom-enter both cubic-bezier(0.4, 0, 0, 1.5),
    ),
    webkit
  );
}

@-webkit-keyframes modal-zoom-leave {
  to {
    @include transform(scale3d(0.3, 0.3, 0.3));
  }
}

@keyframes modal-zoom-leave {
  to {
    @include transform(scale3d(0.3, 0.3, 0.3));
  }
}

.modal-zoom-leave {
  @include prefix(
    (
      animation: modal-zoom-leave both,
    ),
    webkit
  );
}
